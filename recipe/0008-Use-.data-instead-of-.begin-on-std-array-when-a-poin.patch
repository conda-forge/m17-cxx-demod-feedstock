From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ryan Volz <ryan.volz@gmail.com>
Date: Fri, 11 Mar 2022 16:39:59 -0500
Subject: [PATCH] Use .data() instead of .begin() on std::array when a pointer
 is needed.

Using .begin() returns an iterator, which MSVC is having trouble casting
to a pointer as needed.
---
 apps/m17-demod.cpp | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/apps/m17-demod.cpp b/apps/m17-demod.cpp
index b26fad8..23edd02 100644
--- a/apps/m17-demod.cpp
+++ b/apps/m17-demod.cpp
@@ -130,12 +130,12 @@ bool dump_lsf(std::array<T, N> const& lsf)
 
     if (display_lsf)
     {
-        std::copy(lsf.begin() + 6, lsf.begin() + 12, encoded_call.begin());
+        std::copy(lsf.data() + 6, lsf.data() + 12, encoded_call.data());
         auto src = LinkSetupFrame::decode_callsign(encoded_call);
         std::cerr << "\nSRC: ";
         for (auto x : src) if (x) std::cerr << x;
 
-        std::copy(lsf.begin(), lsf.begin() + 6, encoded_call.begin());
+        std::copy(lsf.data(), lsf.data() + 6, encoded_call.data());
         auto dest = LinkSetupFrame::decode_callsign(encoded_call);
         std::cerr << ", DEST: ";
         for (auto x : dest) if (x) std::cerr << x;
@@ -190,15 +190,15 @@ bool demodulate_audio(mobilinkd::M17FrameDecoder::audio_buffer_t const& audio, i
     if (noise_blanker && viterbi_cost > 80)
     {
         buf.fill(0);
-        std::cout.write((const char*)buf.begin(), 320);
-        std::cout.write((const char*)buf.begin(), 320);
+        std::cout.write((const char*)buf.data(), 320);
+        std::cout.write((const char*)buf.data(), 320);
     }
     else
     {
-        codec2_decode(codec2, buf.begin(), audio.begin() + 2);
-        std::cout.write((const char*)buf.begin(), 320);
-        codec2_decode(codec2, buf.begin(), audio.begin() + 10);
-        std::cout.write((const char*)buf.begin(), 320);
+        codec2_decode(codec2, buf.data(), audio.data() + 2);
+        std::cout.write((const char*)buf.data(), 320);
+        codec2_decode(codec2, buf.data(), audio.data() + 10);
+        std::cout.write((const char*)buf.data(), 320);
     }
 
     return result;
-- 
2.35.0

